#!/bin/bash
# openerp-web        This shell script takes care of starting and stopping
#                    OpenERP web server
#
# chkconfig: 345 95 05
# description: OpenERP Web server
#
# pidfile: /var/run/openerp-web.pid
# config: /etc/openerp-web.cfg

### BEGIN INIT INFO
# Provides:             openerp-web
# Required-Start:       $syslog
# Required-Stop:        $syslog
# Should-Start:         $network openerp-server
# Should-Stop:          $network openerp-server
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    OpenERP Web - the Web Client of the OpenERP
# Description:          OpenERP is a complete ERP and CRM software.
### END INIT INFO

DAEMON=/usr/bin/openerp-web
NAME=openerp-web
DESC="OpenERP Web-Server Daemon"

# Specify the user name (Default: openerp).
USER="openerp"

# Specify an alternate config file (Default: /etc/openerp-web.cfg).
CONFIGFILE="/etc/openerp-web.cfg"

PIDFILE=/var/run/openerp/$NAME.pid

DAEMON_OPTS="--pidfile=$PIDFILE"
# --logfile=$LOGFILE"


# check if the openerp-server conf file is present, then use it
if [ -f ${CONFIGFILE} ]; then
    DAEMON_OPTS="$DAEMON_OPTS -c ${CONFIGFILE}"
fi

# Source function library
if [ -f /etc/init.d/functions ] ; then
    . /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
    . /etc/rc.d/init.d/functions
else
    exit 0
fi

RETVAL=0

start() {
    echo -n $"Starting $DESC ($DAEMON): "
    daemon --user $USER --check $NAME \
	--pidfile $PIDFILE \
	"/usr/bin/setsid $DAEMON $DAEMON_OPTS &"

    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch $PIDFILE
    return $RETVAL
}

stop() {
    echo -n $"Stopping $DESC: "
    killproc -p $PIDFILE $DAEMON
    RETVAL=$?
    if [ $RETVAL -eq 0 ] ; then
	rm -f $PIDFILE

	echo_success
	echo
    else
	echo_failure
	echo
    fi
    return $RETVAL
}

restart() {
    stop
    start
}

condrestart() {
    [ -e $PIDFILE ] && restart || :
}

status() { 
    if [ -f $PIDFILE ] ; then
        checkpid `cat $PIDFILE`
	RETVAL=$?
        if [ $RETVAL -eq 0 ] ; then
	    echo  $"$NAME is running..."
	else
	    echo  $"$NAME is stopped"
	fi
    else
    	echo  $"$NAME is stopped"
    fi
    return $RETVAL
}

case "$1" in
start)
    start
    ;;

stop)
    stop
    ;;

restart|reload)
    restart
    ;;

condrestart)
    condrestart
    ;;

status)
    status
    ;;

probe)
    exit 0
    ;;

*)
    echo $"Usage: $0 {start|stop|status|restart|condrestart|reload}"
    exit 1
    ;;
esac


# vim: sts=4 st=4 et

