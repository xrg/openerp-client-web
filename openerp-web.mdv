#!/bin/bash
# openerp-web        This shell script takes care of starting and stopping
#                    OpenERP web server
#
# chkconfig: 345 95 05
# description: OpenERP Web server
#
# pidfile: /var/run/openerp-web.pid
# config: /etc/openerp-web.cfg

### BEGIN INIT INFO
# Provides:             openerp-web
# Required-Start:       $syslog openerp-server
# Required-Stop:        $syslog openerp-server
# Should-Start:         $network
# Should-Stop:          $network
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    OpenERP Web - the Web Client of the OpenERP
# Description:          OpenERP is a complete ERP and CRM software.
### END INIT INFO


. /etc/rc.d/init.d/functions

NAME=openerp-web

DAEMON=/usr/bin/start-openerp-web
PIDFILE=/var/run/openerp/openerp-web.pid
LOCKFILE=/var/lock/subsys/openerp-web
# LOGFILE=/var/log/openerp/openerp-web.log
CONFIGFILE="/etc/openerp-web.cfg"

OPTS="--pidfile=$PIDFILE"
# --logfile=$LOGFILE"

prog="openerp-web"
desc="OpenERP Web-Server Daemon"

# check if the openerp-server conf file is present, then use it
if [ -f ${CONFIGFILE} ]; then
    OPTS="$OPTS ${CONFIGFILE}"
fi

# Source function library
if [ -f /etc/init.d/functions ] ; then
    . /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
    . /etc/rc.d/init.d/functions
else
    exit 0
fi

# check the existence of the openerp-server script
[ -z "/usr/bin/start-openerp-web" ] && exit 0

RETVAL=0

start() {
    echo -n $"Starting $desc ($prog): "
    daemon --user tinyerp --check $NAME \
    "/usr/bin/setsid $DAEMON $OPTS &"

    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch $LOCKFILE
    return $RETVAL
}

stop() {
    echo -n $"Stopping $desc ($prog): "
    kill -TERM `cat $PIDFILE` > /dev/null 2>&1
        RETVAL=$?
	    if [ $RETVAL -eq 0 ] ; then
	        rm -f $LOCKFILE

		echo_success
		echo
		    else
		echo_failure
		echo
		    fi
		return $RETVAL
}

restart() {
    stop
    start
}

condrestart() {
    [ -e $LOCKFILE ] && restart || :
}

status() { 
    if [ -f $PIDFILE ] ; then
        checkpid `cat $PIDFILE`
	RETVAL=$?
        if [ $RETVAL -eq 0 ] ; then
	    echo  $"$prog is running..."
	else
	    echo  $"$prog is stopped"
	fi
    else
    	echo  $"$prog is stopped"
    fi
    return $RETVAL
}

case "$1" in
start)
    start
    ;;

stop)
    stop
    ;;

restart|reload)
    restart
    ;;

condrestart)
    condrestart
    ;;

status)
    status
    ;;

probe)
    exit 0
    ;;

*)
    echo $"Usage: $0 {start|stop|status|restart|condrestart|reload}"
    exit 1
    ;;
esac


# vim: sts=4 st=4 et

